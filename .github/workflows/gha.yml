#
# The 'XXX_DISABLE_' suffix is used twice in this file to disable two actions:
# 1) XXX_DISABLE_${CI_FILE_PUSH_IMAGE_TO_REPO} - disables pushing the rebuilt Docker image and
# 2) XXX_DISABLE_AUTO_DOC_UPDATE - disables making pull requests with the update of documentation.
# Those two actions are disabled, because they conflict with the same ones run on Travis.
# Only one CI (Travis or GitHub Actions) can run them at the time, so they can be enabled here,
# when we decide to switch from Travis to GitHub Actions. The 'XXX_DISABLE_' suffix should be removed then.
#

name: WIN
on: [push]

env:
    GITHUB_REPO:    pmem/libpmemobj-cpp
    DOCKERHUB_REPO: pmem/libpmemobj-cpp

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    env:
      HOST_WORKDIR:   /home/runner/work/libpmemobj-cpp/libpmemobj-cpp
      WORKDIR:        utils/docker
    strategy:
      matrix:
        CONFIG: ["N=1 OS=ubuntu OS_VER=19.10 TYPE=debug PUSH_IMAGE=1",
                 "N=2 OS=fedora OS_VER=31    TYPE=debug PUSH_IMAGE=1",
                 "N=3 OS=ubuntu OS_VER=19.10 TYPE=release",
                 "N=4 OS=fedora OS_VER=31    TYPE=release XXX_DISABLE_AUTO_DOC_UPDATE=1",
                 "N=5 OS=ubuntu OS_VER=19.10 TYPE=valgrind",
                 "N=6 OS=ubuntu OS_VER=19.10 TYPE=memcheck_drd",
                 "N=7 OS=ubuntu OS_VER=19.10 TYPE=package",
                 "N=8 OS=fedora OS_VER=31    TYPE=package",
                 "N=9 OS=ubuntu OS_VER=19.10 TYPE=coverage",
                "N=10 OS=ubuntu OS_VER=19.10 TYPE=coverity"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Change ownership of the repo
         run: sudo chown -R 1000.1000 $HOST_WORKDIR

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f XXX_DISABLE_${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh $OS-$OS_VER; fi"

  windows:
    name: Windows
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
      GENERATOR: "Visual Studio 16 2019"
      PMDK_INCLUDE_DIR: "C:/vcpkg/packages/pmdk_x64-windows/include"
      PMDK_LIBRARY: "C:/vcpkg/packages/pmdk_x64-windows/bin;C:/vcpkg/packages/pmdk_x64-windows/lib"
      platform: x64
#      GENERATOR: "Visual Studio 14 2015 Win64"
#      version: 1.4.{build}
#      os: Visual Studio 2017
    strategy:
      matrix:
        CONFIG: [Debug] # , Release]
    steps:
       - name: Cache packages
         uses: actions/cache@v1
         id: cache-pmdk
         with:
            path: C:/vcpkg/packages
            key:  pmdk-1.7

       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Install PMDK
         if: steps.cache-pmdk.outputs.cache-hit != 'true'
         run: |
            vcpkg install pmdk:x64-windows
            vcpkg install sfml:x64-windows

       - run: vcpkg integrate install

       - name: Setup MSBuild.exe
         uses: warrenbuckley/Setup-MSBuild@v1

       - name: Configure
         env:
           LIBPMEM_INC_DIR: "C:/vcpkg/packages/pmdk_x64-windows/include"
           LIBPMEM_LIB_DIR: "C:/vcpkg/packages/pmdk_x64-windows/lib"
           LIBPMEMOBJ_INC_DIR: "C:/vcpkg/packages/pmdk_x64-windows/include"
           LIBPMEMOBJ_LIB_DIR: "C:/vcpkg/packages/pmdk_x64-windows/lib"
         run: cmake . -Bbuild -G "${env:GENERATOR}" -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_INSTALL_PREFIX=c:/install/libpmemobj-cpp -DTESTS_USE_FORCED_PMEM=ON -DLIBPMEMOBJ_VERSION="1.7"

       - name: Build
         env:
           CONFIGURATION: ${{ matrix.CONFIG }}
         run: msbuild build/ALL_BUILD.vcxproj /property:Configuration=${env:CONFIGURATION} /verbosity:minimal

       - name: Test
         run: |
           dir
           cd build
           ctest -C ${env:CONFIGURATION} --output-on-failure --timeout 540

# XXX: enable this after pmdk update
#- msbuild INSTALL.vcxproj /verbosity:minimal
#- cd ..
# build standalone example
#- cd examples/map_cli
#- cmake . -G "${{ GENERATOR }}"
#        -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake
#        -DCMAKE_PREFIX_PATH=c:/install/libpmemobj-cpp
#        -DTESTS_USE_FORCED_PMEM=ON
#- msbuild ALL_BUILD.vcxproj /verbosity:minimal
